on:
  weather:
    apiKey: ${{ secrets.OPENWEATHERMAP_API_KEY }}
    params:
      lat: ${{ secrets.LAT }}
      lon: ${{ secrets.LON }}
      lang: de
      units: metric
    config:
      #every: "0 6-23/6 * * 1-5"
      timeZone: Europe/Berlin

jobs:
  print:
    name: Print
    runs-on: ubuntu-latest
    steps:
      - name: Print Outputs
        continue-on-error: true
        id: collect_data
        env:
          alert_active: ${{on.weather.outputs.alerts[0].description}}
          alert_start: ${{on.weather.outputs.alerts[0].start}}
          alert_end: ${{on.weather.outputs.alerts[0].end}}
        run: |
          echo Alarmstatus: $alert_active 
          if [${alerts_active} != false]
          then
            conv_alert_start=$(date +%H:%M --date='TZ="CET" @'${alert_start})
            conv_alert_end=$(date +%H:%M --date='TZ="CET" @'${alert_end})
            echo "::set-output name=alert_active::${alert_active}"
            echo "::set-output name=conv_alert_start::${conv_alert_start}"
            echo "::set-output name=conv_alert_end::${conv_alert_end}"
          fi
      - name: Slack Alert
        continue-on-error: true
        uses: Ilshidur/action-slack@2.1.0
        if: ${{ on.weather.outputs.alerts[0].description != '' }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEATHER_BOT }}
          alert_start: ${{steps.collect_data.outputs.conv_alert_start}}
          alert_end: ${{steps.collect_data.outputs.conv_alert_end}}
          alert_desc: ${{steps.collect_data.outputs.alert_active}}
          #SLACK_CUSTOM_PAYLOAD: '{ "text": "Wolken ", "blocks": [ { "type": "header", "text": { "type": "plain_text", "text": ":sun_behind_cloud: Wetterinfo ", "emoji": true } },{ "type": "section", "text": { "type": "mrkdwn", "text": "Ein kleines bisschen Sonne ist in Sicht" } }, { "type": "divider" } ] }'
        with:
          args:
            ":bangbang: ALARM :bangbang:\n
            {{ alert_desc }}\n
            GÃ¼ltig von {{ alert_start }} bis {{alert_end }}\n"
